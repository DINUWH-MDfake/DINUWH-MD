const { cmd } = require('../command');

let contacts = []; // JSON file ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑Ñ‡∂Ø‡∑è‡∂ú‡∂±‡∑ä‡∂± ‡∂ï‡∂±‡∑í ‡∂±‡∑ê‡∂≠‡∑î‡∑Ä memory ‡∂ë‡∂ö‡∑ö store ‡∂ö‡∂ª‡∂±‡∑ä‡∂±

cmd({
    pattern: "savecontact",
    alias: ["savecont", "addcontact"],
    react: "üìû",
    desc: "Save user's contact with a unique number",
    category: "utility",
    use: ".savecontact <reply to user>",
    filename: __filename
}, 
async(conn, mek, m, { from, reply }) => {
    try {
        if (!m.quoted) return reply("üìå *Usage:* Reply to a user message with .savecontact");
        let contactNumber = m.quoted.sender.split("@")[0];

        // Check if already saved
        if (contacts.some(contact => contact.number === contactNumber)) {
            return reply("‚ö† *This contact is already saved!*");
        }

        // Next number ‡∂ë‡∂ö ‡∂ú‡∂±‡∑ä‡∂±
        let nextNumber = (contacts.length + 1).toString().padStart(3, '0'); // 001, 002, 003 format

        // New Contact Object
        let newContact = {
            name: `DINUWH-MD ${nextNumber}`,
            number: contactNumber
        };

        // Contact list ‡∂ë‡∂ö memory ‡∂ë‡∂ö‡∑ö save ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        contacts.push(newContact);

        // Bot ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä Contact Send ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        await conn.sendMessage(from, {
            contacts: {
                displayName: newContact.name,
                contacts: [{ vcard: `BEGIN:VCARD\nVERSION:3.0\nFN:${newContact.name}\nTEL:${contactNumber}\nEND:VCARD` }]
            }
        }, { quoted: mek });

        reply(`‚úÖ *Saved Contact:* ${newContact.name} (${contactNumber})`);

    } catch (error) {
        console.error(error);
        reply("‚ö† *Error:* Contact save ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑î‡∂´‡∑è!");
    }
});
